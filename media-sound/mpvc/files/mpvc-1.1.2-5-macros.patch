--- a/src/main.rs
+++ b/src/main.rs
@@ -393,128 +393,59 @@
 
             match mpv.get_metadata() {
                 Ok(metadata) => {
-                    if input_str.contains("%title%") {
-                        if metadata.contains_key("title") {
-                            if let MpvDataType::String(ref s) = metadata["title"] {
-                                output_string = output_string.replace("%title%", s);
-                            }
-                        } else {
-                            match mpv.get_property::<String>("media-title") {
-                                Ok(media_title) => {
-                                    output_string = output_string.replace("%title%", &media_title);
+                    macro_rules! fmt_metadata {
+                        ($pattern:expr, $key:expr) => {
+                            if input_str.contains($pattern) {
+                                if metadata.contains_key($key) {
+                                    if let MpvDataType::String(ref s) = metadata[$key] {
+                                        output_string = output_string.replace($pattern, s);
+                                    }
+                                } else {
+                                    output_string = output_string.replace($pattern, "");
                                 }
-                                Err(msg) => error!("Error: {}", msg),
-                            }
-                        }
-                    }
-
-                    if input_str.contains("%artist%") {
-                        if metadata.contains_key("artist") {
-                            if let MpvDataType::String(ref s) = metadata["artist"] {
-                                output_string = output_string.replace("%artist%", s);
-                            }
-                        } else {
-                            output_string = output_string.replace("%artist%", "");
-                        }
-                    }
-
-                    if input_str.contains("%album%") {
-                        if metadata.contains_key("album") {
-                            if let MpvDataType::String(ref s) = metadata["album"] {
-                                output_string = output_string.replace("%album%", s);
-                            }
-                        } else {
-                            output_string = output_string.replace("%album%", "");
-                        }
-                    }
-
-                    if input_str.contains("%albumartist%") {
-                        if metadata.contains_key("album_artist") {
-                            if let MpvDataType::String(ref s) = metadata["album_artist"] {
-                                output_string = output_string.replace("%albumartist%", s);
-                            }
-                        } else {
-                            output_string = output_string.replace("%albumartist%", "");
-                        }
-                    }
-
-                    if input_str.contains("%date%") {
-                        if metadata.contains_key("date") {
-                            if let MpvDataType::String(ref s) = metadata["date"] {
-                                output_string = output_string.replace("%date%", s);
-                            }
-                        } else {
-                            output_string = output_string.replace("%date%", "");
-                        }
-                    }
-
-                    if input_str.contains("%track%") {
-                        if metadata.contains_key("track") {
-                            if let MpvDataType::String(ref s) = metadata["track"] {
-                                output_string = output_string.replace("%track%", s);
                             }
-                        } else {
-                            output_string = output_string.replace("%track%", "");
                         }
                     }
 
-                    if input_str.contains("%genre%") {
-                        if metadata.contains_key("genre") {
-                            if let MpvDataType::String(ref s) = metadata["genre"] {
-                                output_string = output_string.replace("%genre%", s);
-                            }
-                        } else {
-                            output_string = output_string.replace("%genre%", "");
-                        }
-                    }
-
-                    if input_str.contains("%composer%") {
-                        if metadata.contains_key("composer") {
-                            if let MpvDataType::String(ref s) = metadata["composer"] {
-                                output_string = output_string.replace("%composer%", s);
-                            }
-                        } else {
-                            output_string = output_string.replace("%composer%", "");
-                        }
-                    }
-
-                    if input_str.contains("%comment%") {
-                        if metadata.contains_key("comment") {
-                            if let MpvDataType::String(ref s) = metadata["comment"] {
-                                output_string = output_string.replace("%comment%", s);
+                    macro_rules! fmt_property {
+                        ($pattern:expr, $property:expr) => {
+                            if input_str.contains($pattern) {
+                                match mpv.get_property::<String>($property) {
+                                    Ok(s) => {
+                                        output_string = output_string.replace($pattern, &s);
+                                    }
+                                    Err(msg) => error!("Error: {}", msg),
+                                }
                             }
-                        } else {
-                            output_string = output_string.replace("%comment%", "");
                         }
                     }
 
-                    if input_str.contains("%disc%") {
-                        if metadata.contains_key("disc") {
-                            if let MpvDataType::String(ref s) = metadata["disc"] {
-                                output_string = output_string.replace("%disc%", s);
+                    if input_str.contains("%title%") {
+                        if metadata.contains_key("title") {
+                            if let MpvDataType::String(ref s) = metadata["title"] {
+                                output_string = output_string.replace("%title%", s);
                             }
                         } else {
-                            output_string = output_string.replace("%disc%", "");
-                        }
-                    }
-
-                    if input_str.contains("%path%") {
-                        match mpv.get_property::<String>("path") {
-                            Ok(path) => {
-                                output_string = output_string.replace("%path%", &path);
+                            match mpv.get_property::<String>("media-title") {
+                                Ok(media_title) => {
+                                    output_string = output_string.replace("%title%", &media_title);
+                                }
+                                Err(msg) => error!("Error: {}", msg),
                             }
-                            Err(msg) => error!("Error: {}", msg),
                         }
                     }
 
-                    if input_str.contains("%file%") {
-                        match mpv.get_property::<String>("filename") {
-                            Ok(filename) => {
-                                output_string = output_string.replace("%file%", &filename);
-                            }
-                            Err(msg) => error!("Error: {}", msg),
-                        }
-                    }
+                    fmt_metadata!("%artist%", "artist");
+                    fmt_metadata!("%album%", "album");
+                    fmt_metadata!("%albumartist%", "album_artist");
+                    fmt_metadata!("%date%", "date");
+                    fmt_metadata!("%track%", "track");
+                    fmt_metadata!("%genre%", "genre");
+                    fmt_metadata!("%composer%", "composer");
+                    fmt_metadata!("%comment%", "comment");
+                    fmt_metadata!("%disc%", "disc");
+                    fmt_property!("%path%", "path");
+                    fmt_property!("%file%", "file");
 
                     if input_str.contains("%position%") {
                         match mpv.get_property::<usize>("playlist-pos") {
