--- a/src/main.rs
+++ b/src/main.rs
@@ -8,7 +8,10 @@
 #[macro_use]
 mod macros;
 
+use std::process::Command as Cmd;
 use std::process::exit;
+use std::thread;
+use std::time;
 
 use clap::{AppSettings, Arg, Command, SubCommand};
 use colored::*;
@@ -301,11 +304,37 @@
 
     //Input socket is always present, therefore unwrap
     let mpv;
-    match Mpv::connect(matches.value_of("socket").unwrap()) {
+    let socket = matches.value_of("socket").unwrap();
+    match Mpv::connect(socket) {
         Ok(instance) => {
             mpv = instance;
         }
-        Err(msg) => error!("Error: {}", msg),
+        Err(msg) => {
+            match matches.subcommand() {
+                Some(("playlist", playlist_matches)) => {
+                    match playlist_matches.subcommand() {
+                        Some(("add", _)) => {
+                            Cmd::new("mpv")
+                                .args(&["--really-quiet",
+                                        "--idle=once",
+                                        "--vid=no",
+                                        &("--input-ipc-server=".to_string() + socket)])
+                                .spawn()
+                                .expect("mpv failed to start");
+                            thread::sleep(time::Duration::from_millis(500));
+                            match Mpv::connect(socket) {
+                                Ok(instance) => {
+                                    mpv = instance;
+                                }
+                                Err(msg) => error!("Error: {}", msg)
+                            }
+                        }
+                        _ => error!("Error: {}", msg)
+                    }
+                }
+                _ => error!("Error: {}", msg)
+            }
+        }
     }
 
     // The user used the sub-command `pause`
