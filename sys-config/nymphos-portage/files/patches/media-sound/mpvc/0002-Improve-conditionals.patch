--- a/src/main.rs
+++ b/src/main.rs
@@ -551,23 +551,14 @@
         ("set", Some(set_matches)) => {
             match set_matches.subcommand() {
                 ("mute", Some(mute_matches)) => {
-                    match mute_matches.value_of("arg").unwrap() {
-                        "on" => {
-                            if let Err(msg) = mpv.set_mute(Switch::On) {
-                                error!("Error: {}", msg);
-                            }
-                        }
-                        "off" => {
-                            if let Err(msg) = mpv.set_mute(Switch::Off) {
-                                error!("Error: {}", msg);
-                            }
-                        }
-                        "toggle" => {
-                            if let Err(msg) = mpv.set_mute(Switch::Toggle) {
-                                error!("Error: {}", msg);
-                            }
-                        }
+                    let switch_type = match mute_matches.value_of("arg").unwrap() {
+                        "on" => Switch::On,
+                        "off" => Switch::Off,
+                        "toggle" => Switch::Toggle,
                         _ => unreachable!(),
+                    };
+                    if let Err(msg) = mpv.set_mute(switch_type) {
+                        error!("Error: {}", msg);
                     }
                 }
 
@@ -581,101 +572,63 @@
 
                 ("volume", Some(volume_matches)) => {
                     let num = volume_matches.value_of("num").unwrap();
+                    let number_change_option;
                     if volume_matches.is_present("increase") {
-                        if let Err(msg) = mpv.set_volume(
-                            num.parse::<f64>().unwrap(),
-                            NumberChangeOptions::Increase,
-                        )
-                        {
-                            error!("Error: {}", msg);
-                        }
+                        number_change_option = NumberChangeOptions::Increase;
                     } else if volume_matches.is_present("decrease") {
-                        if let Err(msg) = mpv.set_volume(
-                            num.parse::<f64>().unwrap(),
-                            NumberChangeOptions::Decrease,
-                        )
-                        {
-                            error!("Error: {}", msg);
-                        }
+                        number_change_option = NumberChangeOptions::Decrease;
                     } else {
-                        if let Err(msg) = mpv.set_volume(
-                            num.parse::<f64>().unwrap(),
-                            NumberChangeOptions::Absolute,
-                        )
-                        {
-                            error!("Error: {}", msg);
-                        }
+                        number_change_option = NumberChangeOptions::Absolute;
+                    }
+                    if let Err(msg) = mpv.set_volume(
+                        num.parse::<f64>().unwrap(),
+                        number_change_option,
+                    )
+                    {
+                        error!("Error: {}", msg);
                     }
                 }
 
                 ("speed", Some(speed_matches)) => {
                     let num = speed_matches.value_of("num").unwrap();
+                    let number_change_option;
                     if speed_matches.is_present("increase") {
-                        if let Err(msg) = mpv.set_speed(
-                            num.parse::<f64>().unwrap(),
-                            NumberChangeOptions::Increase,
-                        )
-                        {
-                            error!("Error: {}", msg);
-                        }
+                        number_change_option = NumberChangeOptions::Increase;
                     } else if speed_matches.is_present("decrease") {
-                        if let Err(msg) = mpv.set_speed(
-                            num.parse::<f64>().unwrap(),
-                            NumberChangeOptions::Decrease,
-                        )
-                        {
-                            error!("Error: {}", msg);
-                        }
+                        number_change_option = NumberChangeOptions::Decrease;
                     } else {
-                        if let Err(msg) = mpv.set_speed(
-                            num.parse::<f64>().unwrap(),
-                            NumberChangeOptions::Absolute,
-                        )
-                        {
-                            error!("Error: {}", msg);
-                        }
+                        number_change_option = NumberChangeOptions::Absolute;
+                    }
+                    if let Err(msg) = mpv.set_speed(
+                        num.parse::<f64>().unwrap(),
+                        number_change_option,
+                    )
+                    {
+                        error!("Error: {}", msg);
                     }
                 }
 
                 ("loop-file", Some(loop_playlist_matches)) => {
-                    match loop_playlist_matches.value_of("arg").unwrap() {
-                        "on" => {
-                            if let Err(msg) = mpv.set_loop_file(Switch::On) {
-                                error!("Error: {}", msg);
-                            }
-                        }
-                        "off" => {
-                            if let Err(msg) = mpv.set_loop_file(Switch::Off) {
-                                error!("Error: {}", msg);
-                            }
-                        }
-                        "toggle" => {
-                            if let Err(msg) = mpv.set_loop_file(Switch::Toggle) {
-                                error!("Error: {}", msg);
-                            }
-                        }
+                    let switch_type = match loop_playlist_matches.value_of("arg").unwrap() {
+                        "on" => Switch::On,
+                        "off" => Switch::Off,
+                        "toggle" => Switch::Toggle,
                         _ => unreachable!(),
+                    };
+                    if let Err(msg) = mpv.set_loop_file(switch_type) {
+                        error!("Error: {}", msg);
                     }
                 }
 
                 ("loop-playlist", Some(loop_playlist_matches)) => {
-                    match loop_playlist_matches.value_of("arg").unwrap() {
-                        "on" => {
-                            if let Err(msg) = mpv.set_loop_playlist(Switch::On) {
-                                error!("Error: {}", msg);
-                            }
-                        }
-                        "off" => {
-                            if let Err(msg) = mpv.set_loop_playlist(Switch::Off) {
-                                error!("Error: {}", msg);
-                            }
-                        }
-                        "toggle" => {
-                            if let Err(msg) = mpv.set_loop_playlist(Switch::Toggle) {
-                                error!("Error: {}", msg);
-                            }
-                        }
+                    let switch_type = match loop_playlist_matches.value_of("arg").unwrap() {
+                        "on" => Switch::On,
+                        "off" => Switch::Off,
+                        "toggle" => Switch::Toggle,
                         _ => unreachable!(),
+                    };
+                    if let Err(msg) = mpv.set_loop_playlist(switch_type) {
+                        error!("Error: {}", msg);
                     }
                 }
 
@@ -691,19 +644,17 @@
                 n = n * -1.0f64;
             }
             let n = n;
+            let seek_option;
             if seek_matches.is_present("absolute") {
-                if let Err(msg) = mpv.seek(n, SeekOptions::Absolute) {
-                    error!("Error: {}", msg);
-                }
+                seek_option = SeekOptions::Absolute;
             } else if seek_matches.is_present("absolute-percent") {
-                if let Err(msg) = mpv.seek(n, SeekOptions::AbsolutePercent) {
-                    error!("Error: {}", msg);
-                }
+                seek_option = SeekOptions::AbsolutePercent;
             } else if seek_matches.is_present("relative-percent") {
-                if let Err(msg) = mpv.seek(n, SeekOptions::RelativePercent) {
-                    error!("Error: {}", msg);
-                }
-            } else if let Err(msg) = mpv.seek(n, SeekOptions::Relative) {
+                seek_option = SeekOptions::RelativePercent;
+            } else {
+                seek_option = SeekOptions::Relative;
+            }
+            if let Err(msg) = mpv.seek(n, seek_option) {
                 error!("Error: {}", msg);
             }
         }
@@ -801,41 +752,19 @@
                         "playlist" => PlaylistAddTypeOptions::Playlist,
                         _ => unreachable!(),
                     };
-                    match add_matches.value_of("mode").unwrap() {
-                        "replace" => {
-                            if let Err(msg) = mpv.playlist_add(
-                                file,
-                                file_type,
-                                PlaylistAddOptions::Replace,
-                            )
-                            {
-                                error!("Error: {}", msg);
-                            }
-                        }
-
-                        "append" => {
-                            if let Err(msg) = mpv.playlist_add(
-                                file,
-                                file_type,
-                                PlaylistAddOptions::Append,
-                            )
-                            {
-                                error!("Error: {}", msg);
-                            }
-                        }
-
-                        "append-play" => {
-                            if let Err(msg) = mpv.playlist_add(
-                                file,
-                                file_type,
-                                PlaylistAddOptions::AppendPlay,
-                            )
-                            {
-                                error!("Error: {}", msg);
-                            }
-                        }
-
+                    let add_option = match add_matches.value_of("mode").unwrap() {
+                        "replace" => PlaylistAddOptions::Replace,
+                        "append" => PlaylistAddOptions::Append,
+                        "append-play" => PlaylistAddOptions::AppendPlay,
                         _ => unreachable!(),
+                    };
+                    if let Err(msg) = mpv.playlist_add(
+                        file,
+                        file_type,
+                        add_option,
+                    )
+                    {
+                        error!("Error: {}", msg);
                     }
                 }
 
